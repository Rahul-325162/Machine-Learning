# importing the lybrerys
%matplotlib inline
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# importing the data set present in sklear lybrery
from sklearn.datasets import load_digits
digits = load_digits()
print("key present in data set is: ",list(digits.keys()))
# read description of our data
print(digits.DESCR)
digits['images'].shape
# frist 8*8 image
digits['images'][0]
# actual labeles for images upto 20
digits.target[:20]

fig = plt.figure(figsize=(8,8))
fig.subplots_adjust(left=0, right=1, bottom=0, top=1,hspace=0.1, wspace=0.1)

for i in range(64):
    ax=fig.add_subplot(8,8,i+1, xticks=[],yticks=[])
    # here imshow function is used for show target valuse in image formate
    ax.imshow(digits.images[i],cmap=plt.cm.binary,interpolation='nearest')
    
# labling the image for better understanding
    ax.text(0,7,str(digits.target[i]))
    # Splitting the dataset into the Training set and Test set
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(digits.data,digits.target,test_size = 0.25)

# Fitting Random Forest Classification to the Training set
from sklearn.ensemble import RandomForestClassifier
classifier = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 0)
classifier.fit(X_train, y_train)

# Predicting the Test set results
y_pred = classifier.predict(X_test)

# Making the Confusion Matrix
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)
print(cm)
# Acurecy test
print ("Total Qustion: {}".format(cm.sum()))
print ("Correct Answer: {}".format(cm.diagonal().sum()))
print ("Accuracy of Model: {}".format(cm.diagonal().sum()/cm.sum()*100))
